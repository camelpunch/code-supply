#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"

context=$1
secret_name=$2
key="$3"
iam_account=$4
hours=${5:-3}

if [ -z "$context" ] || [ -z "$secret_name" ] || [ -z "$key" ] || [ -z "$iam_account" ]
then
    echo "Usage: rotate-google-service-account-key CONTEXT SECRET_NAME KEY IAM_ACCOUNT [HOURS]"
    echo
    echo "  Creates a new key for a given account, stores it in k8s"
    echo "  and deletes old keys for the account."
    echo
    echo "  e.g. "
    echo "  bo rotate \\"
    echo "     google-service-account-key \\"
    echo "     affable \\"
    echo "     my-secret-name \\"
    echo "     google-storage-key \\"
    echo "     accountname@code-supply.iam.gserviceaccount.com \\"
    echo "     36 # delete keys older than 36 hours (default is 3)"
    echo
    exit 1
fi

dir=/tmp/rotate-google-service-account-keys
mkdir -p $dir

now="$(date +%s)"
oldest="$((now - 3600*hours))"
oldest_formatted="$(date --date=@$oldest -Iminutes)"
keys="gcloud --quiet iam service-accounts keys"
old_key_names=$(
$keys list \
    --iam-account="$iam_account" \
    --filter='keyType = "USER_MANAGED"' \
    "--format=value(name)" \
    --created-before="$oldest_formatted"
)

(
cd "$dir"
$keys create \
    --iam-account="$iam_account" \
    "./$key"

"$cwd/set-credential" "$context" "$secret_name" "$key" \
    < "./$key"
)

for old_google_key_name in $old_key_names
do
    $keys delete \
        --iam-account="$iam_account" \
        "$old_google_key_name"
done

rm -rf "$dir"
